name: Raito CLI - GCP Plugin - Build
on:
  push:
    branches:
      - 'main'
  pull_request:
permissions:
  id-token: write
  contents: read
jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
          cache-dependency-path: "**/*.sum"

      - name: Mod Tidy
        run: go mod tidy

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61.0

      - name: Terraform Lint
        run: terraform fmt -check=true -recursive
        working-directory: .infra/infra

  remove-old-infra:
    uses: ./.github/workflows/destroy-infra.yml
    with:
      targetEnvironment: integration_testing
    secrets: inherit

  setup-infra:
    uses: ./.github/workflows/generate-infra.yml
    with:
      targetEnvironment: integration_testing
      demo-infra: false
      testing-infra: true
    secrets: inherit

    needs:
      - remove-old-infra
    if: always()

  generate-usage:
    uses: ./.github/workflows/generate-usage.yml
    with:
      targetEnvironment: integration_testing
    secrets: inherit

    needs:
      - setup-infra

  build:
    environment: integration_testing
    runs-on: ubuntu-latest

    needs:
      - setup-infra
      - generate-usage
      - linting

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true
          cache-dependency-path: "**/*.sum"

      - name: Mod Tidy
        run: go mod tidy

      - name: Build
        run: make build

      - name: Generate credentials file
        run: | 
          echo $GCP_CREDENTIALS > $RUNNER_TEMP/credentials.json
          echo GOOGLE_APPLICATION_CREDENTIALS=$(echo "$RUNNER_TEMP/credentials.json") >> $GITHUB_ENV
        env:
          GCP_CREDENTIALS: ${{ secrets.gcp_credentials }}

      - name: Test
        run: make test
        env:
          GSUITE_CUSTOMER_ID: ${{ secrets.gsuite_customer_id }}
          GSUITE_IMPERSONATE_SUBJECT: ${{ secrets.gsuite_impersonate_subject }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          GCP_ORGANIZATION_ID: ${{ secrets.gcp_organization_id }}

      - name: Test Sync
        run: make test-sync
        env:
          GSUITE_CUSTOMER_ID: ${{ secrets.gsuite_customer_id }}
          GSUITE_IMPERSONATE_SUBJECT: ${{ secrets.gsuite_impersonate_subject }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT }}
          GCP_ORGANIZATION_ID: ${{ secrets.gcp_organization_id }}

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt,./coverage-sync.txt
