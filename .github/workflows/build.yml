name: Raito CLI - GCP Plugin - Build
on:
  push:
    branches:
      - 'main'
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          check-latest: true
          cache-dependency-path: "**/*.sum"

      - name: Mod Tidy
        run: go mod tidy

      - name: Build
        run: make build

      - name: Lint
        uses: golangci/golangci-lint-action@v5
        with:
          version: v1.56.1

      - name: Generate credentials file
        run: | 
          echo $GCP_CREDENTIALS > $RUNNER_TEMP/credentials.json
          echo GOOGLE_APPLICATION_CREDENTIALS=$(echo "$RUNNER_TEMP/credentials.json") >> $GITHUB_ENV
        env:
          GCP_CREDENTIALS: ${{ secrets.gcp_credentials }}

      - name: Test
        run: make test
        env:
          GSUITE_CUSTOMER_ID: ${{ secrets.gsuite_customer_id }}
          GSUITE_IMPERSONATE_SUBJECT: ${{ secrets.gsuite_impersonate_subject }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          GCP_PROJECT_ID: ${{ secrets.gcp_project_id }}
          GCP_ORGANIZATION_ID: ${{ secrets.gcp_organization_id }}

      - name: Test Sync
        run: make test-sync
        env:
          GSUITE_CUSTOMER_ID: ${{ secrets.gsuite_customer_id }}
          GSUITE_IMPERSONATE_SUBJECT: ${{ secrets.gsuite_impersonate_subject }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          GCP_PROJECT_ID: ${{ secrets.gcp_project_id }}
          GCP_ORGANIZATION_ID: ${{ secrets.gcp_organization_id }}

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt,./coverage-sync.txt
