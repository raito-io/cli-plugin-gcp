name: Manual - Generate usage
on:
  workflow_call:
    inputs:
      targetEnvironment:
        required: true
        type: string
    secrets:
      AWS_OIDC_DEPLOY_ROLE:
        required: true
      AWS_REGION:
        required: true
      AWS_S3_TERRAFORM_BUCKET:
        required: true
      AWS_S3_TERRAFORM_KEY:
        required: true
      AWS_DYNAMODB_TERRAFORM_TABLE:
        required: true
      GCP_PROJECT:
        required: true
      GCP_REGION:
        required: true
      GCP_EMAIL_B_STEWART:
        required: true
      GCP_EMAIL_C_HARRIS:
        required: true
      GCP_EMAIL_D_HAYDEN:
        required: true
      GCP_EMAIL_M_CARISSA:
        required: true
      GCP_EMAIL_N_NGUYEN:
        required: true
      GCP_EMAIL_GROUP_SALES:
        required: true
      GCP_EMAIL_GROUP_DEV:
        required: true
      gcp_credentials:
        required: true
  workflow_dispatch:
    inputs:
      targetEnvironment:
        type: choice
        description: Please select a target environment
        required: true
        default: 'integration_testing'
        options:
          - integration_testing
          - testing
permissions:
  id-token: write
  contents: read
jobs:
  generate-usage:
    environment: ${{ inputs.targetEnvironment }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Assume role using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_DEPLOY_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Generate credentials file
        run: |
          echo $GCP_CREDENTIALS > $RUNNER_TEMP/credentials.json
          echo GOOGLE_APPLICATION_CREDENTIALS=$(echo "$RUNNER_TEMP/credentials.json") >> $GITHUB_ENV
        env:
          GCP_CREDENTIALS: ${{ secrets.gcp_credentials }}

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Initiate Terraform
        uses: ./.github/actions/terraform-init
        with:
          S3TerraformKey: ${{ secrets.AWS_S3_TERRAFORM_KEY }}
          S3TerraformBucket: ${{ secrets.AWS_S3_TERRAFORM_BUCKET }}
          DynamoDBTerraformTable: ${{ secrets.AWS_DYNAMODB_TERRAFORM_TABLE }}

      - name: Generate usage
        uses: ./.github/actions/generate-usage
        with:
          gcpCredentials: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}